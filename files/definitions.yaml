name:
  description: The name of the DynamoDB table or index.
  type: string
  minLength: 1
  maxLength: 255

preset:
  description: >
    The name of a preset offered by this mixin, a high-level specification of a DynamoDB table configuration, sparing you from repeating low-level instrctions.  If you set this field, all other configuration is overridden for this table.

    graph: A table and GSI configuration supporting a model including vertices, edges, 1st order traversals, and conditional support for higher order traversals.

  type: string
  enum:
    - graph

ttl:
  description: >
    The time to live specification for this table, set by naming a field that DynamoDB will check within each item.

    The field *must be a Number type* and formmated in Epoch Time, *seconds* since Jan 1st, 1970 UTC. When the current time is greater than the value in this field, the item is scheduled for automated deletion.

    Note that the items are *eventually* deleted, so take care if you need strict TTL. (see below)

    Note from AWS:
      DynamoDB typically deletes expired items within 48 hours of expiration. The exact duration within which an item truly gets deleted after expiration is specific to the nature of the workload and the size of the table. Items that have expired and have not been deleted still appear in reads, queries, and scans.

  type: string


attributes:
  description:
    The declaration of all named attributes in the table, including a specification of the primary keys.  For this dictionary, the keys are the attribute names, and the values are tuples that describe the data type and, optionally, the key type. For index key attributes, their data type is declared here, but their key type is defined in the index declaration.
  type: object
  additionalProperties:
    type: array
    addtionalItems: false
    minItems: 1
    maxItems: 2
    items:
      - type: string
        enum: [S, N, B]
      - type: string
        enum: [RANGE, HASH, range, hash, Range, Hash]

indexKeys:
  description:
    The declaration of keys for this index.  For this dictionary, the keys are the key names, and the values are key type.
  type: object
  additionalProperties:
    type: string
    enum: [RANGE, HASH]

throughput:
  description: >
    The maximum amount of capacity that an application can consume from a table or index. For provisioned writes, this is represented in the tuple as [read, write] "units".  If your application exceeds your provisioned throughput settings, it is subject to request throttling. ON-DEMAND mode bills you per request. When in this mode, do not specify throughput on your GSIs.
  anyOf:
    - type: string
      enum: [ ON-DEMAND ]
    - type: array
      additionalItems: false
      minItems: 2
      maxItems: 2
      items:
        - type: integer
          minimum: 1
        - type: integer
          minimum: 1

projection:
  description: >
    Attributes that are copied (projected) from the source table into the index. These attributes are in addition to the primary key attributes and index key attributes, which are automatically projected.  If you omit this field, Sky defaults to the projection ALL.
  type: object
  additionalProperties: false
  required: [type]
  properties:
    type:
      type: string
      enum: [KEYS_ONLY, INCLUDE, ALL]
    nonKeyAttributes:
      type: array
      items:
        type: string

globalSecondaryIndex:
  type: object
  additionalProperties: false
  required: [name, keys]
  properties:
    name: {$ref: "#/definitions/name"}
    keys: {$ref: "#/definitions/indexKeys"}
    projection: {$ref: "#/definitions/projection"}
    throughput: {$ref: "#/definitions/throughput"}

localSecondaryIndex:
  type: object
  additionalProperties: false
  required: [name, keys]
  properties:
    name: {$ref: "#/definitions/name"}
    keys: {$ref: "#/definitions/indexKeys"}
    projection: {$ref: "#/definitions/projection"}
